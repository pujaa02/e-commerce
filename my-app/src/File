// import fs from "fs";
// import path from "path";
import dotenv from "dotenv";
dotenv.config();
import {  Sequelize } from "sequelize-typescript";
import User from "./user";
import product_data from "./product_data";
import watchlist from "./watchlist";
import favourite from "./favourite";


const initSequalize = () => {
  // const _basename = path.basename(module.filename);
  const sequelize = new Sequelize(process.env.DATABASE as string, process.env.DBUSER as string, process.env.DBPASSWORD as string, {
    host:  process.env.HOST,
    dialect: "mysql",
    port: 3306,
  });

  sequelize
    .authenticate()
    .then(() => console.log(`Successfully connected to database!`))
    .catch((err) => console.log(`Something went wrong ${err.message}`));

  sequelize.addModels([User,product_data,watchlist,favourite]);
  return sequelize;
};
const db = {
  connect: initSequalize(),

};
export default db;


'use strict';
import { Table, Column, Model, DataType, PrimaryKey, AutoIncrement, Default } from 'sequelize-typescript';
import { UserAttributes } from '../interface';
import { Optional } from 'sequelize';


//paranoid => deleted_at coulumn add
// @Table({tableName:"Users",timestamps:true,paranoid:true})
interface Data22 extends Optional<UserAttributes,"user_id">{}

@Table({ tableName: "Users" })
export default class User extends Model<Data22> {

  @PrimaryKey
  @AutoIncrement
  @Column(DataType.INTEGER)
  user_id!: number;

  @Column(DataType.STRING)
  fname!: string;

  @Column(DataType.STRING)
  lname!: string;

  @Column(DataType.STRING)
  email!: string;

  @Column(DataType.INTEGER)
  phone!: number;

  @Column(DataType.STRING)
  gender!: string;

  @Column(DataType.DATEONLY)
  bd!: Date;

  @Default(null)
  @Column(DataType.STRING)
  password!: string;

  @Default(null)
  @Column(DataType.STRING)
  access_key!: string;

  @Default(false)
  @Column(DataType.INTEGER)
  isdeleted!: number;

}

import { Request, Response } from "express";
import User from "../models/user";
import db from "../models/index";
// import { Model, Optional } from "sequelize";
// import { UserAttributes } from "../interface";


const models = db.connect;

interface ModelsBasics {
    user_id?: number;
    password?: string;
    access_key?: string;
    isdeleted?: number
    createdAt?: Date;
    updatedAt?: Date;
    DeletedAt?: Date | null;
}

interface Data extends ModelsBasics {
    fname: string;
    lname: string;
    email: string;
    phone: number;
    gender: string;
    bd: Date;
}
// type UserCreationAttributes = Optional<UserAttributes, 'user_id'>;

const register = async (req: Request, res: Response) => {
    const data: Data = {
        fname: "puja", lname: "moravadiya", email: "puja@abc.com", phone: 9878654532, gender: "fename", bd: new Date('2002-11-30')
    }
    try {
        const insertdata = await User.create(data);
        console.log(insertdata);
        res.send("hello user");
    } catch (error) {
        console.log(error);
        res.send("unSuccess");
    }
}

export default { register }
